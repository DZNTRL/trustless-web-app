{
    "swagger": "2.0",
    "info": {
      "description": "Pro web api",
      "version": "1.0.0",
      "title": "Pro Web",
      "termsOfService": "",
      "contact": {
        "email": "webmaster@jbotw.com"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      }
    },
    "host": "localhost:3000",
    "tags": [
      {
        "name": "user",
        "description": "Operations about user"
      }
    ],
    "schemes": [
      "https",
      "http"
    ],
    "paths": {
      "/api/user": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "Create user",
          "description": "This can only be done by the logged in user.",
          "operationId": "createUser",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "user",
              "description": "the desired username and publicKey",
              "required": true,
              "schema": {
                "type": "object",
                "items": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/api/user/unique/{username}": {
        "tags": ["user"],
        "summary": "",
        "operationId": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "username"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "/api/request-session": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "Creates list of users with given input array",
          "operationId": "requestSession",
          "produces": [
            "application/json"
          ],          
          "parameters": [
            {
              "in": "path",
              "name": "username",
              "description": "username for which to create challege",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "string"
              }
            },
            "400": {
              "description": "Invalid username supplied"
            }
          }
        }
      },
      "/api/login": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "Logs user into the system",
          "description": "",
          "operationId": "loginUser",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "username",
              "in": "body",
              "description": "The user name for login",
              "required": true,
              "schema" : {
                "type": "object",
                "items": {
                  "username": "string",
                  "challenge": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "string"
              }
            },
            "400": {
              "description": "Invalid username/password supplied"
            }
          }
        }
      },
      "/api/logout": {
        "get": {
          "tags": [
            "user"
          ],
          "summary": "Logs out current logged in user session",
          "description": "",
          "operationId": "logoutUser",
          "produces": [
            "application/json"
          ],
          "parameters": [],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/api/user/{username}": {
        "get": {
          "tags": [
            "user"
          ],
          "summary": "Get user by user name",
          "description": "",
          "operationId": "getUserByName",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "description": "The name that needs to be fetched. Use user1 for testing. ",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "400": {
              "description": "Invalid username supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "put": {
          "tags": [
            "user"
          ],
          "summary": "Updated user",
          "description": "This can only be done by the logged in user.",
          "operationId": "updateUser",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "name that need to be updated",
              "required": true,
              "type": "integer"
            },
            {
              "in": "body",
              "name": "body",
              "description": "Updated user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid user supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "delete": {
          "tags": [
            "user"
          ],
          "summary": "Delete user",
          "description": "This can only be done by the logged in user.",
          "operationId": "deleteUser",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The name that needs to be deleted",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "405": {
              "description": "method not allowed"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      }
    },
    "securityDefinitions": {
      "petstore_auth": {
        "type": "oauth2",
        "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
        "flow": "implicit",
        "scopes": {
          "write:pets": "modify pets in your account",
          "read:pets": "read your pets"
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    },
    "definitions": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "publicKey": {
              "type": "string"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "SessionRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "challenge": {
            "type": "string"
          }

        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "Data": {},
          "Message": {
            "type": "string"
          },
          "IsError": {
            "type": "boolean"
          }
        }
      }
    },
    "externalDocs": {
      "description": "external docs",
      "url": "http://WIP"
    }
  }